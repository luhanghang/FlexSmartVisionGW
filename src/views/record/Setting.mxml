<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" right="5" left="1" width="100%" height="100%" 
	horizontalScrollPolicy="off" verticalScrollPolicy="off" backgroundAlpha="0" 
	xmlns:recording="views.record.*" xmlns:views="views.*" creationComplete="init()">
	
	<mx:Metadata>
		[Event(name="Popup", type="events.PopupEvent")]
	</mx:Metadata>
	
	<mx:Script>
		<![CDATA[
			import mx.validators.ValidationResult;
			import mx.rpc.events.ResultEvent;
			import mx.events.CloseEvent;
			import mx.messaging.channels.StreamingAMFChannel;
			import mx.controls.Alert;
			import mx.controls.CheckBox;
			import mx.collections.ArrayCollection;
			import utils.Utils;
			import mx.core.Application;
			import mx.managers.PopUpManager;
			import utils.Icons;
			
			[Bindable]
			private var gFilter:GlowFilter = Utils.neonFilter();
			
			[Bindable]
			public var spots:XML;
			
			[Bindable]
			public static var hours:Array = new Array;
			
			[Bindable]
			public static var minutes:Array = new Array;
			
			private function init():void {
				var i:Number;
				for(i = 0; i < 24; i++) {
					hours.push((i < 10? "0":"") + i.toString());
				}
				
				for(i = 0; i < 60; i+=5) {
					minutes.push((i < 10? "0":"") + i.toString());
				}	
				
				spotRPC.url = Utils.get_url("/spots/list");
				spotRPC.send();
			}
			
			private function isGroup(node:XML):Boolean {
				return node.localName().toString() == "Group";
			}
         	
			private function set_icon(item:Object):* {
				var group_root:XML = spots.Group.(@parent=="0")[0];
				if(item == group_root) return Icons.HOME;
				if(isGroup(item as XML)) {
					//return spotTree.isItemOpen(item)? Icons.FOLDER_OPEN:Icons.FOLDER;
					return spotTree.isItemOpen(item)? spotTree.getStyle('folderOpenIcon'):spotTree.getStyle('folderClosedIcon');
				} else return Icons.MONITOR;		
			}
			
			private function labelFunction(item:XML):String {
				if(isGroup(item))
					return item.@name + " (" + item.children().length() + ")";
				return item.@name
			}
			
			private function showSchedule():void {
				var node:XML = spotTree.selectedItem as XML;
				if(node == null || node.@parent == '0') {
					spotTree.selectedIndex = -1;
					return;
				};
				if(isGroup(node)) {
					spotTree.expandItem(node,!spotTree.isItemOpen(node));
					spotTree.selectedIndex = -1;
				} else {
					if(daily.selected) {
						currentState = "DailyState";	
						dailySchedule.init();
						if(node != dailySchedule.schedule.spot) {
							dailySchedule.schedule.spot = node;	
							dailySchedule.schedule.gateway = spots.@gateway;
							dailySchedule.schedule.init();			
						}							
					} else {
						currentState = "WeeklyState";
						weeklySchedule.init();
						if(node != weeklySchedule.schedule.spot) {
							weeklySchedule.schedule.gateway = spots.@gateway;
							weeklySchedule.schedule.spot = node;
							weeklySchedule.schedule.init();
						}
					}
					setTitle();
				}	
			}
			
			private function setTitle():void {
				var node:XML = spotTree.selectedItem as XML;
				if(daily.selected) {
					title.setText(" 录像计划:日计划 监控点:" + node.@name);
				} else {
					title.setText(" 录像计划:周计划 监控点:" + node.@name);
				}
			}
			
			private function set_spots(event:ResultEvent):void {
				spots = XML(event.result);	
			}
		]]>
	</mx:Script>
		
	<mx:HTTPService id="spotRPC" useProxy="false" method="POST" showBusyCursor="true" resultFormat="xml" result="set_spots(event)"/>
	<mx:HDividedBox x="0" y="0" width="100%" height="100%">
		<mx:Canvas width="250" height="100%" styleName="menu" borderSides="left right bottom" maxWidth="250" backgroundAlpha="0">
			<mx:VBox width="100%" height="100%" x="0" y="25">
				<mx:Tree id="spotTree" dataProvider="{spots}" showRoot="false" itemRenderer="skins.TreeItemRender" 
					width="100%" height="100%" labelFunction="{labelFunction}" openItems="{spots.Group}" rowHeight="18"
					iconFunction="set_icon" doubleClickEnabled="true" doubleClick="spotTree.selectedIndex = -1" click="showSchedule()"/>
				<mx:HBox width="100%" styleName="board" filters="{[Utils.neonFilter(0)]}" horizontalAlign="center">
					<mx:RadioButtonGroup id="scheduleType" change="showSchedule()"/>
					<mx:RadioButton id="daily" label="日计划" groupName="scheduleType" filters="{[gFilter]}"/>
					<mx:RadioButton id="weekly" label="周计划" groupName="scheduleType" filters="{[gFilter]}" selected="true"/>
				</mx:HBox>
			</mx:VBox>
			<views:StyleTitle text="监控点列表"/>	
		</mx:Canvas>
		<mx:Canvas id="scheduleFrame" width="100%" height="100%" styleName="menu" borderSides="left right bottom"
			horizontalScrollPolicy="off" verticalScrollPolicy="off" backgroundAlpha="0">
			<views:StyleTitle id="title" text=" 录像计划 "/>
		</mx:Canvas>
	</mx:HDividedBox>
	
	<mx:states>
		<mx:State name="WeeklyState">
			<mx:AddChild relativeTo="{scheduleFrame}" position="firstChild">
				<recording:WeeklySchedule id="weeklySchedule" x="0" y="0" creationComplete="setTitle()"/>
			</mx:AddChild>
		</mx:State>
		<mx:State name="DailyState">
			<mx:AddChild relativeTo="{scheduleFrame}" position="firstChild">
				<recording:DailySchedule id="dailySchedule" x="0" y="0" creationComplete="setTitle()"/>
			</mx:AddChild>
		</mx:State>
	</mx:states>	
</mx:Canvas>
