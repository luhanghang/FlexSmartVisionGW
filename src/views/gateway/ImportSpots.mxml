<?xml version="1.0" encoding="utf-8"?>
<TitleWin xmlns="views.*" xmlns:mx="http://www.adobe.com/2006/mxml" width="400" height="300"
	xmlns:u="utils.*" creationComplete="init()" title="{Str.xml.read.@string+Str.xml.spit.@string+Str.xml.spot.@string+Str.xml.split.@string+Str.xml.inf.@string}" alpha="0" 
	xmlns:pv3dEffects="ws.tink.flex.pv3dEffects.*">
	
	<mx:Script>
		<![CDATA[
			import utils.*;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			import flash.net.FileReference;
			
			private var fileRef:FileReference;
			private var gwXmlFilter:Array = [new FileFilter("Config File","*.xml")];
			
			[Bindable]
			private var remoteStr:String;
			[Bindable]
			private var localStr:String;
			
			private function init():void {
				remoteStr = Str.xml.read.@string + Str.xml.split.@string + Str.xml.remote.@string + Str.xml.split.@string + Str.xml.setting.@string;
				localStr = Str.xml.read.@string + Str.xml.split.@string + Str.xml.local.@string + Str.xml.split.@string + Str.xml.file.@string;
				fadeIn.play();
				init_fileRef();			
			}
			
			private function init_fileRef():void {
            	Security.allowDomain("*");
            	this.fileRef = new FileReference();	
				fileRef.addEventListener(Event.SELECT, selectHandler);
				fileRef.addEventListener(Event.COMPLETE, completeHandler);
            }
            
            private function completeHandler(event:Event):void {
				read.enabled = true;		
			}
			
			override protected function close():void {
				fadeOut.play();	
			}
			
			private function fileBrowse():void {
				fileRef.browse(gwXmlFilter);	
			}
			
			private function selectHandler(event:Event):void {
				fileName.text = this.fileRef.name;
				fileName.toolTip = fileName.text;	
				fileRef.load();
			}
			
			private function showSpots():void {
				if(vs.selectedIndex == 0) {
					remote.url = utils.Utils.get_url("/gateway/get_remote_conf");
					var params:URLVariables = new URLVariables;
					params["ip"] = ip.text;
					params["port"] = port.text;
					//remote.url = "http://" + ip.text + ":" + port.text + "/gateway/get_config";
					remote.send(params);
				} else {
					callBack.call(parent, XML(fileRef.data));
					close();
				}
			}
			
			private function readRemote(event:ResultEvent):void {
				callBack.call(parent, XML(event.result));
				close();	
			}
			
			private function activeValidator():void {
				formValidator.addValidators(validators);
				formValidator.failedCallBack=function():void{
					read.enabled=false;
					dispatchEvent(new Event("ValidateError"));
				};
				formValidator.passedCallBack=function():void{
					read.enabled=true;
					dispatchEvent(new Event("ValidateOK"));
				};
			}
		]]>
	</mx:Script>
	
	<mx:Array id="validators">
		<u:IPValidator id="vIp" source="{ip}" property="text" required="true" requiredFieldError="{Str.xml.lack.@string + Str.xml.split.@string + Str.xml.valid.@string + Str.xml.split.@string + 'IP' + Str.xml.split.@string + Str.xml.address.@string}"/>
		<mx:NumberValidator id="vPort" source="{port}" property="text" required="true" 
			requiredFieldError="{Str.xml.lack.@string + Str.xml.split.@string + Str.xml.port.@string}" maxValue="65535" minValue="1" 
			exceedsMaxError="{Str.xml.lack.@string + Str.xml.split.@string + Str.xml.valid.@string + Str.xml.split.@string + Str.xml.port.@string}" lowerThanMinError="{Str.xml.lack.@string + Str.xml.split.@string + Str.xml.valid.@string + Str.xml.split.@string + Str.xml.port.@string}" invalidCharError="{Str.xml.lack.@string + Str.xml.split.@string + Str.xml.valid.@string + Str.xml.split.@string + Str.xml.port.@string}"/>
	</mx:Array>
	
	<mx:HTTPService id="remote" showBusyCursor="true" resultFormat="xml" requestTimeout="10" 
		result="readRemote(event)" method="POST"/>
	
	<mx:Fade id="hideFlip" alphaFrom="1" alphaTo="0"/>
    <mx:Fade id="showFlip" alphaFrom="0" alphaTo="1"/>
	<mx:Fade alphaFrom="0" alphaTo="1" id="fadeIn" target="{this}"/>
	<mx:Fade alphaFrom="1" alphaTo="0" id="fadeOut" target="{this}" effectEnd="PopUpManager.removePopUp(this);"/>
	
	<mx:VBox horizontalAlign="center" width="100%" height="100%" verticalGap="20" 
		horizontalScrollPolicy="off" verticalScrollPolicy="off" y="20">
		<mx:ToggleButtonBar id="method" dataProvider="{[remoteStr,localStr]}"/>
		
		<mx:Canvas width="100%" height="100%">
			<mx:ViewStack id="vs" selectedIndex="{method.selectedIndex}" width="100%" height="100%">
				<mx:Canvas hideEffect="{hideFlip}" showEffect="{showFlip}" width="100%" height="100%" 
					show="activeValidator()" creationComplete="activeValidator()">
					<mx:VBox width="100%" horizontalAlign="center">
						<mx:Canvas styleName="menu" height="120" horizontalCenter="0" borderSides="left top right bottom">
							<mx:Form horizontalCenter="0" verticalCenter="0">
								<mx:FormItem label="{Str.xml.remote.@string+Str.xml.split.@string+Str.xml.server.@string+Str.xml.split.@string+'IP'+Str.xml.split.@string+Str.xml.address.@string}">
									<mx:TextInput id="ip"/>
								</mx:FormItem>
								<mx:FormItem label="{Str.xml.remote.@string+Str.xml.split.@string+Str.xml.server.@string+Str.xml.split.@string+Str.xml.port.@string}">
									<mx:TextInput id="port"/>
								</mx:FormItem>
							</mx:Form>
						</mx:Canvas>
					</mx:VBox>	
				</mx:Canvas>
				<mx:Canvas hideEffect="{hideFlip}" showEffect="{showFlip}" width="100%" height="100%" show="read.enabled=false">
					<mx:VBox width="100%" horizontalAlign="center">
						<mx:Canvas styleName="menu" width="90%" height="120" borderSides="left top right bottom">
							<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
								<mx:TextInput id="fileName" enabled="false"/>
								<mx:Button label="{Str.xml.select.@string+Str.xml.split.@string+Str.xml.file.@string}" click="fileBrowse()"/>					
							</mx:HBox>
						</mx:Canvas>
					</mx:VBox>	
				</mx:Canvas>
			</mx:ViewStack>	
		</mx:Canvas>
		<mx:HBox verticalAlign="middle" height="50">
			<mx:Button id="read" label="{Str.xml.start_to_read.@string}" enabled="false" click="showSpots()"/>
			<mx:Button label="{Str.xml.cancel.@string}" click="close()"/>			
		</mx:HBox>
	</mx:VBox>	
</TitleWin>
